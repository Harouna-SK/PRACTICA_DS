' Generated by UML Generator
' Encoded: lLJBQiCm4BphAnPwiTigz6nQ4vT02VHGy1SeafgAE5AGb9GqpRzNAoMsyw215d8nqkneHplUrT1vPlrotX0tKth1B9i3RvXpbVTMJPPUZhdHjVgIy40-b930bUMD92Iou2sSLbuP3Hi2GDroKbd9N06lolb7N9Vm15f-GcKjMqUqp7Baql2vQyzdIXHG1qqzlGSX7RTgWNW7Xij9xOjE4hFSCI7g99g5E2i0bta1AwC4nj-L5WWzhyUYfv4d8ZAcqe-CiUv5hKAWubmwb-Mx2Z1IxbZrWeLO6uhRacm9OHFdBUC-EHSJHpjkEZtSdQaAuPEwMdDYLN_q9Tmt59ptXAvYHN9WfApatjXrR8RK6flGQLxnBLXZVDN-geCGQvgeN_IwPI-RB6cfSpQJCNlM-zbjz7Af1rJKEAKYUa0DXLUx6sRvkJiUKo_O5FV97P7AxhBzEZNnu3yc1XKob4n5NdbSkZU3qkyo9UumG-anD1YKlUc8uqNf2OIiUF2e-sxt2PFTdMRQ7oOVIYt2Q_W3
' URL: http://www.plantuml.com/plantuml/uml/lLJBQiCm4BphAnPwiTigz6nQ4vT02VHGy1SeafgAE5AGb9GqpRzNAoMsyw215d8nqkneHplUrT1vPlrotX0tKth1B9i3RvXpbVTMJPPUZhdHjVgIy40-b930bUMD92Iou2sSLbuP3Hi2GDroKbd9N06lolb7N9Vm15f-GcKjMqUqp7Baql2vQyzdIXHG1qqzlGSX7RTgWNW7Xij9xOjE4hFSCI7g99g5E2i0bta1AwC4nj-L5WWzhyUYfv4d8ZAcqe-CiUv5hKAWubmwb-Mx2Z1IxbZrWeLO6uhRacm9OHFdBUC-EHSJHpjkEZtSdQaAuPEwMdDYLN_q9Tmt59ptXAvYHN9WfApatjXrR8RK6flGQLxnBLXZVDN-geCGQvgeN_IwPI-RB6cfSpQJCNlM-zbjz7Af1rJKEAKYUa0DXLUx6sRvkJiUKo_O5FV97P7AxhBzEZNnu3yc1XKob4n5NdbSkZU3qkyo9UumG-anD1YKlUc8uqNf2OIiUF2e-sxt2PFTdMRQ7oOVIYt2Q_W3
' Generated on: 2025-10-19T17:47:09.401018480

@startuml
skinparam classAttributeIconSize 0
hide circle

class Partition {
  -subAreas: List<Area> = new ArrayList<>()
  --
  +Partition(id: String, description: String, parent: Partition)
  +addSubArea(area: Area): void
  +findAreaById(id: String): Area
  +getDoorsGivingAccess(): List<Door>
  +getSpaces(): List<Space>
}

abstract class Area {
  #id: String
  #description: String
  #parent: Partition
  --
  +Area(id: String, description: String, parent: Partition)
  +getId(): String
  +findAreaById(id: String): Area
  +getDoorsGivingAccess(): List<Door>
  +getSpaces(): List<Space>
}

class DirectoryAreas {
  -{static} rootArea: Area
  -{static} allDoors: ArrayList<Door>
  --
  +{static} makeAreas(): void
  +{static} findAreaById(id: String): Area
  +{static} findDoorById(id: String): Door
  +{static} getAllDoors(): ArrayList<Door>
  +{static} getAllSpaces(): List<Space>
}

class Space {
  -doors: List<Door> = new ArrayList<>()
  --
  +Space(id: String, description: String, parent: Partition)
  +addDoor(door: Door): void
  +findAreaById(id: String): Area
  +getDoorsGivingAccess(): List<Door>
  +getSpaces(): List<Space>
}

Partition --|> Area
Partition o-- Area
Partition ..> Partition
Area --> Partition
Area ..> Area
DirectoryAreas *-- Area
Space --|> Area
Space ..> Partition
@enduml